####################################################################
#### viya-services-stop.yml                                     ####
####################################################################
#### Author: SAS Institute Inc.                                 ####
####################################################################
#
# Copyright (c) 2019-2022, SAS Institute Inc., Cary, NC, USA.  All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0
#
---
- hosts: localhost
  gather_facts: false
  vars_files:
    - viya-services-vars.yml
  tasks:
    - name: "WARNING: All Viya services are about to be stopped!"
      pause:
        seconds: "{{stop_pause_timer}}"
        prompt: "Press 'ctl+c' to interrupt the process. If no response, playbook will continue after {{stop_pause_timer}} seconds"
      when: not ansible_check_mode and enable_pause_timer|bool == true

- import_playbook: ../common/handle_hostgroup_hyphens.yml
  tags:
    - always

- hosts: sas_all
  become: yes
  become_user: root
  gather_facts: false
  any_errors_fatal: true
  vars_files:
    - viya-services-vars.yml

  tasks:
    - name: Check any SAS process running
      script: viya-svs.sh checkps 1
      register: psflag
      check_mode: no
      changed_when: false

    - set_fact:
        deployhostnum: "{{groups['sas_all'] | length }}"
        check_mode: no

- hosts: sas_all
  become: yes
  become_user: root
  gather_facts: false
  any_errors_fatal: true
  vars_files:
    - viya-services-vars.yml
  tasks:

    - block:

      - name: Stop SAS multi-tenant services
        script: viya-svs.sh stopmt

      - name: Stop SAS microservices
        script: viya-svs.sh stopms

      any_errors_fatal: true
      when: psflag.stdout != "" and not ansible_check_mode and enable_svs_alternative|bool != true

    - name: Stop SAS all services using alternative script
      script: viya-svs-alternative.sh 1 stop
      when: psflag.stdout != "" and not ansible_check_mode and enable_svs_alternative|bool == true

- hosts: httpproxy
  become: yes
  become_user: root
  gather_facts: false
  any_errors_fatal: true
  tasks:
    - name: Stop SAS HTTP proxy service
      script: viya-svs.sh stop sas-viya-httpproxy-default
      when: psflag.stdout != ""

- hosts: sas_casserver_primary
  become: yes
  become_user: root
  gather_facts: false
  any_errors_fatal: true
  tasks:
    - name: Stop SAS CAS server
      script: viya-svs.sh stopcas
      when: psflag.stdout != ""

- hosts: CoreServices
  become: yes
  become_user: root
  gather_facts: false
  any_errors_fatal: true
  vars_files:
    - viya-services-vars.yml
  tasks:
    - name: Stop cachelocator/cacheserver
      script: viya-svs.sh stop sas-viya-cachelocator-default sas-viya-cacheserver-default
      when: enable_svs_alternative|bool == true

- hosts: rabbitmq
  become: yes
  become_user: root
  gather_facts: false
  any_errors_fatal: true
  tasks:
    - name: Stop SAS Message Broker RabbitMQ
      any_errors_fatal: true
      script: viya-svs.sh stop sas-viya-rabbitmq-server-default
      when: psflag.stdout != ""

- hosts: sas_all
  become: yes
  become_user: root
  gather_facts: false
  any_errors_fatal: true
  vars_files:
    - ../../../vars.yml
  tasks:
    - block:
      - name: Stop SAS Infrastructure Data Server pgpool
        include_tasks: viya-db.yml
        vars:
          dbname: "{{INVOCATION_VARIABLES[inventory_hostname]['pgpoolc'][0]['SERVICE_NAME']|default([])}}"
          dbaction: "stopdb"
          dbnum: "{{INVOCATION_VARIABLES[inventory_hostname]['pgpoolc'][0]['POOL_NUMBER']|default([])}}"
          dbtype: pgpool
        when: INVOCATION_VARIABLES[inventory_hostname]['pgpoolc'] is defined

      - name: Stop SAS Infrastructure Data Server node
        include_tasks: viya-db.yml
        vars:
          dbname: "{{INVOCATION_VARIABLES[inventory_hostname]['sasdatasvrc'][0]['SERVICE_NAME']|default([])}}"
          dbaction: "stopdb"
          dbnum: "{{INVOCATION_VARIABLES[inventory_hostname]['sasdatasvrc'][0]['NODE_NUMBER']|default([])}}"
          dbtype: node
        when: INVOCATION_VARIABLES[inventory_hostname]['sasdatasvrc'] is defined

      - name: Stop SAS Infrastructure Data Server Consul Template pgpool
        include_tasks: viya-dbct.yml
        vars:
          dbname: "{{INVOCATION_VARIABLES[inventory_hostname]['pgpoolc'][0]['SERVICE_NAME']|default([])}}"
          dbaction: stopdbct
          dbtype: pgpool
        when: INVOCATION_VARIABLES[inventory_hostname]['pgpoolc'] is defined and INVOCATION_VARIABLES[inventory_hostname]['pgpoolc'][0]['HA_PGPOOL_VIRTUAL_IP'] is defined

      - name: Stop SAS Infrastructure Data Server Consul Template node
        include_tasks: viya-dbct.yml
        vars:
          dbname: "{{INVOCATION_VARIABLES[inventory_hostname]['sasdatasvrc'][0]['SERVICE_NAME']|default([])}}"
          dbaction: stopdbct
          dbtype: node
        when: INVOCATION_VARIABLES[inventory_hostname]['sasdatasvrc'] is defined

      - name: Stop SAS Infrastructure Data Server pgpool
        include_tasks: viya-db.yml
        vars:
          dbname: "{{INVOCATION_VARIABLES[inventory_hostname]['cpspgpoolc'][0]['SERVICE_NAME']|default([])}}"
          dbaction: "stopdb"
          dbnum: "{{INVOCATION_VARIABLES[inventory_hostname]['cpspgpoolc'][0]['POOL_NUMBER']|default([])}}"
          dbtype: pgpool
        when: INVOCATION_VARIABLES[inventory_hostname]['cpspgpoolc'] is defined

      - name: Stop SAS Infrastructure Data Server node
        include_tasks: viya-db.yml
        vars:
          dbname: "{{INVOCATION_VARIABLES[inventory_hostname]['cpsdatasvrc'][0]['SERVICE_NAME']|default([])}}"
          dbaction: "stopdb"
          dbnum: "{{INVOCATION_VARIABLES[inventory_hostname]['cpsdatasvrc'][0]['NODE_NUMBER']|default([])}}"
          dbtype: node
        when: INVOCATION_VARIABLES[inventory_hostname]['cpsdatasvrc'] is defined

      - name: Stop SAS Infrastructure Data Server Consul Template pgpool
        include_tasks: viya-dbct.yml
        vars:
          dbname: "{{INVOCATION_VARIABLES[inventory_hostname]['cpspgpoolc'][0]['SERVICE_NAME']|default([])}}"
          dbaction: stopdbct
          dbtype: pgpool
        when: INVOCATION_VARIABLES[inventory_hostname]['cpspgpoolc'] is defined and INVOCATION_VARIABLES[inventory_hostname]['cpspgpoolc'][0]['HA_PGPOOL_VIRTUAL_IP'] is defined

      - name: Stop SAS Infrastructure Data Server Consul Template node
        include_tasks: viya-dbct.yml
        vars:
          dbname: "{{INVOCATION_VARIABLES[inventory_hostname]['cpsdatasvrc'][0]['SERVICE_NAME']|default([])}}"
          dbaction: stopdbct
          dbtype: node
        when: INVOCATION_VARIABLES[inventory_hostname]['cpsdatasvrc'] is defined

      when: psflag.stdout != "" and INVOCATION_VARIABLES[inventory_hostname] is defined

- hosts: sas_all:!consul
  become: yes
  become_user: root
  gather_facts: false
  any_errors_fatal: true
  vars_files:
    - viya-services-vars.yml
  tasks:
    - name: Stop SAS Configuration consul Agent(s)
      any_errors_fatal: true
      script: viya-svs.sh stop sas-viya-consul-default {{consul_retry_count}}
      when: psflag.stdout != ""

- hosts: consul
  become: yes
  become_user: root
  gather_facts: false
  any_errors_fatal: true
  vars_files:
    - viya-services-vars.yml
  tasks:
    - name: Stop SAS Secret Manager - vault
      any_errors_fatal: true
      script: viya-svs.sh stop sas-viya-vault-default
      when: psflag.stdout != ""

    - name: Stop SAS Configuration consul Server(s)
      any_errors_fatal: true
      script: viya-svs.sh stop sas-viya-consul-default {{consul_retry_count}}
      when: psflag.stdout != ""

- hosts: ComputeServer
  become: yes
  become_user: root
  gather_facts: false
  any_errors_fatal: true
  tasks:

      - name: Clean up SAS compsrv child processes
        script: viya-svs.sh cleancomp
        when: not ansible_check_mode

- hosts: sas_all
  become: yes
  become_user: root
  gather_facts: false
  any_errors_fatal: true
  vars_files:
    - viya-services-vars.yml
  tasks:
    - name: Display SAS processes information
      debug: msg="No Viya process running" 
      when: psflag.stdout == ""
      check_mode: no

    - block:
      - name: Capture SAS stray processes
        script: "viya-svs.sh checkps {{stray_process_count}}"
        register: stray_processes
        changed_when: false
        check_mode: no

      - name: Display SAS stray processes
        debug:
          msg:
            - "Please examine the following stray process(es)"
            - "If enable_stray_cleanup=true, process will be cleaned up automatically"
            - "except database processes which require fix manually to avoid data corruption."
            - "This playbook can be rerun to clean up the child processes."
            - "{{stray_processes.stdout_lines}}"
        failed_when: stray_processes.stdout != '' and not ansible_check_mode
        when: (stray_processes.stdout != '') and (enable_stray_cleanup|bool != true)

      - name: Clean up SAS stray processes if enabled
        script: viya-svs.sh cleanps "{{stray_processes.stdout_lines}}"
        when: (enable_stray_cleanup|bool == true) and (stray_processes.stdout != '')
        check_mode: no
        any_errors_fatal: true

      - name: Display SAS cleanup stray processes
        debug:
          msg:
            - "The following stray processes have been cleaned up"
            - "{{stray_processes.stdout_lines}}"
        check_mode: no
        when: (stray_processes.stdout != '') and (enable_stray_cleanup|bool == true)

      when: psflag.stdout != ""

