####################################################################
#### viya-services-start.yml                                    ####
####################################################################
#### Author: SAS Institute Inc.                                 ####
####################################################################
#
# Copyright (c) 2019-2021, SAS Institute Inc., Cary, NC, USA.  All Rights Reserved.
# SPDX-License-Identifier: Apache-2.0
#
---
- import_playbook: ../common/handle_hostgroup_hyphens.yml
  tags:
    - always

- import_playbook: viya-services-start-prereq.yml
  tags:
    - always

- hosts: sas_all
  become: yes
  become_user: root
  gather_facts: false
  any_errors_fatal: true
  vars_files:
    - viya-services-vars.yml
  tasks:
    - name: Start SAS all services using alternative script which might take a while
      script: viya-svs-alternative.sh 1 start
      when: enable_svs_alternative|bool == true

- hosts: consul,rabbitmq,httpproxy,pgpoolc,sasdatasvrc,sas_casserver_primary
  become: yes
  become_user: root
  gather_facts: false
  any_errors_fatal: true
  vars_files:
    - viya-services-vars.yml
  tasks:
    - block:

      - name: Check SAS svas command existence
        stat:
          path: /etc/init.d/sas-viya-all-services
        register: svas_rc

      - name: Start SAS all services which might take a while
        shell: /etc/init.d/sas-viya-all-services start
        register: svas1
        when: svas_rc.stat.exists == true

      when: enable_svs_alternative|bool != true

- hosts: sas_all:!consul:!rabbitmq:!httpproxy:!pgpoolc:!sasdatasvrc:!sas_casserver_primary
  become: yes
  become_user: root
  gather_facts: false
  any_errors_fatal: true
  vars_files:
    - viya-services-vars.yml
  tasks:
    - block:

      - name: Check SAS svas command existence
        stat:
          path: /etc/init.d/sas-viya-all-services
        register: svas_rc

      - name: Start SAS all services which might take a while
        shell: /etc/init.d/sas-viya-all-services start
        register: svas2
        when: svas_rc.stat.exists == true

      when: enable_svs_alternative|bool != true

- hosts: sas_all
  become: yes
  become_user: root
  gather_facts: false
  any_errors_fatal: true
  vars_files:
    - viya-services-vars.yml
  tasks:
    - block:

      - name: Rerun start SAS services if needed
        shell: /etc/init.d/sas-viya-all-services start
        when: not ansible_check_mode and ((svas1 is defined and (svas1.stdout is search('Failed!') or svas1.stdout is search('timeout'))) or (svas2 is defined and (svas2.stdout is search('Failed!') or svas2.stdout is search('timeout'))))
        register: svasall
        until: svasall.stdout.find('Failed!') == -1 and svasall.stdout.find('timeout') == -1
        retries: "{{svas_retry_count}}"
        delay: "{{svas_delay_timer}}"

      when: enable_svs_alternative|bool != true
